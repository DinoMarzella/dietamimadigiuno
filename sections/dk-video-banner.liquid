<style>
    .fadeinout {
        animation: fadeinout 3s infinite;
    }

    @keyframes fadeinout {
        0% {
            opacity: 0;
            transform: scale(0.9);
        }

        10% {
            opacity: 1;
            transform: scale(1);
        }

        90% {
            opacity: 1;
            transform: scale(1);
        }

        100% {
            opacity: 0;
            transform: scale(0.9);
        }
    }
</style>

<section class="relative w-full h-[422.5px] md:h-[650px]  bg-black">

    <div class="absolute inset-0 overflow-hidden">
        <video class="object-cover w-full h-full" autoplay loop muted autoplay playsinline>
            <source src="{{ section.settings.video_url }}" type="video/mp4">
        </video> 
    </div> 

    <div class="relative z-10 flex-col items-start justify-center hidden h-full px-6 md:flex md:px-20 lg:px-32 max-w-[1600px] mx-auto ">
        <div class="relative max-w-lg text-left text-white md:max-w-xl lg:max-w-2xl md:p-[20px]  ">
            <div class="absolute inset-0 top-0 left-0 w-full  opacity-50 z-[0] 	rounded-2xl"></div> 
  
            <h1 class="relative z-[1] mb-4 text-3xl font-bold md:text-5xl !text-white">{{ section.settings.heading_text }}
            <span id="fadeTextDesktop" class="mt-1 italic fade-container fadeinout"></span>
            </h1>
            <p class="mb-6 text-lg md:text-xl !text-white relative z-[1] ">{{ section.settings.sub_text }}</p> 
            <div class="flex  md:max-w-[80%] lg:max-w-[80%] gap-4   flex-wrap md:flex-nowrap ">
            <a href="{{ section.settings.button_link }}"
                class="prerender max-w-[50%] inline-block md:h-[55px] h-[45px] md:text-[18px] text-[16px] flex justify-center items-center py-[10px] w-full  leading-4 !font-[600] text-center rounded-[6px] shadow-sm bg-[#78A14A] hover:bg-[#1F4036] !text-white  relative z-[1] ">
                {{ section.settings.button_text }}
            </a>
              {% if section.settings.quiz_button_text != blank %}
            <a href="{{ section.settings.quiz_button_link }}"
                class="prerender inline-block md:h-[55px] h-[45px] md:text-[18px] text-[16px] flex justify-center items-center py-[10px] w-full  leading-4 !font-[600] text-center rounded-[6px] shadow-sm bg-[#Ffffff] hover:bg-[#F7F9FB] !text-black border border-[#5D7E11]  relative z-[1] px-2 ">
                {{ section.settings.quiz_button_text }}
            </a>
           {% endif %}
            </div>
        </div>
    </div>
</section>

<section class="block md:hidden ">
    <div class="p-6 text-center bg-opacity-50">
    <h1 class="mb-2 text-[34px] md:text-[28px] font-[500] !text-black ">{{ section.settings.heading_text }}
        <span id="fadeTextMobile" class="mt-1 text-[26px] font-[600] leading-[.9] italic fade-container fadeinout text-[#78A14A]"></span>
    </h1> 
    
        <p class=" text-[16px] text-black">{{ section.settings.sub_text }}</p>
        <div class="flex  md:max-w-[70%] lg:max-w-[60%] gap-4   flex-wrap lg:flex-nowrap ">
            <a href="{{ section.settings.button_link }}"
                class="prerender inline-block md:h-[55px] h-[45px] md:text-[18px] text-[16px] flex justify-center items-center py-[10px] w-full  leading-4 !font-[600] text-center rounded-[6px] shadow-sm bg-[#78A14A] hover:bg-[#1F4036] !text-white">
                {{ section.settings.button_text }}
            </a>
          {% if section.settings.quiz_button_text != blank %}
            <a href="{{ section.settings.quiz_button_link }}"
                class="prerender inline-block md:h-[55px] h-[45px] md:text-[18px] text-[16px] flex justify-center items-center py-[10px] w-full  leading-4 !font-[600] text-center rounded-[6px] shadow-sm bg-[#Ffffff] hover:bg-[#F7F9FB] !text-black border border-[#5D7E11] ">
                {{ section.settings.quiz_button_text }}
            </a>
          {% endif %}
        
        </div>
    </div>
</section>



<script>
    {{ section.settings.html }}

    let currentIndex = 0;

    // Desktop fade-in/out
    const fadeTextDesktop = document.getElementById('fadeTextDesktop');
    function showNextStringDesktop() {
        fadeTextDesktop.classList.remove('fadeinout');
        fadeTextDesktop.textContent = strings[currentIndex];
        currentIndex = (currentIndex + 1) % strings.length;
        fadeTextDesktop.offsetWidth;
        fadeTextDesktop.classList.add('fadeinout');
    }

    // Mobile fade-in/out
    const fadeTextMobile = document.getElementById('fadeTextMobile');
    function showNextStringMobile() {
        fadeTextMobile.classList.remove('fadeinout');
        fadeTextMobile.textContent = strings[currentIndex];
        currentIndex = (currentIndex + 1) % strings.length;
        fadeTextMobile.offsetWidth;
        fadeTextMobile.classList.add('fadeinout');
    }

    showNextStringDesktop();
    showNextStringMobile();
    setInterval(() => {
        showNextStringDesktop();
        showNextStringMobile();
    }, 3000);
</script>



{% schema %}
{
"name": "dk Video Section",
"settings": [
{
"type": "url",
"id": "video_url",
"label": "Video URL"
},

{
"type": "textarea",
"id": "heading_text",
"label": "Heading Text"
},
{
"type": "html",
"id": "html",
"label": "Strings"
},
{
"type": "textarea",
"id": "sub_text",
"label": "Subheading Text"
},
{
"type": "url",
"id": "button_link",
"label": "Button Link"
},
{
"type": "text",
"id": "button_text",
"label": "Button Text"
},
{
"type": "url",
"id": "quiz_button_link",
"label": "2 Button Link"
},
{
"type": "text",
"id": "quiz_button_text",
"label": "2 Quiz Button Text"

}
],
"presets": [{
"name": "dk Video section",
"category": "Video"
}]
}
{% endschema %}